# This is a baseling. Can be run as is, but it's expected you will set some parameters
# according to your host (like CPU's, memory and disk size), as well as customize
# the command-line parameters.
#
# The most common configuration options are documented and commented below.
# For a complete reference, please see the online documentation at
# https://docs.vagrantup.com.
# Every Vagrant development environment requires a box. You can search for
# boxes at https://vagrantcloud.com/search.

#
# BOX VARIABLES
#

# These are some (but not all) of the parameters you can change.
# They are grouped here for convinience.
VM_NAME = "vagrant-ubuntu"

# Alternatively you can use "hashicorp/bionic64" instead as a base box.
# Hashicorp only recommends hashicorp and bento boxes.
VM_BOX = "bento/ubuntu-22.04"

# CPU, ram and disk size can be changed now or later.
# Disk size can't be reduced afterwards.
# Min disk size with bento/hashicorp boxes is 64gb,
# unless you really want to dig in the configurations.
CPU_COUNT = 2
RAM_MB = 8196
DISK_SIZE = "80GB"

PRIVATE_NET_IP = "192.168.56.101"

# Check for necessary plugins
unless Vagrant.has_plugin?("vagrant-disksize")
  raise 'missing plugin: vagrant plugin install vagrant-disksize'
end
unless Vagrant.has_plugin?("vagrant-vbguest")
  raise 'missing plugin: vagrant plugin install vagrant-vbguest'
end

#
# VAGRANT CONFIGURATION
#
Vagrant.configure("2") do |config|
  config.vm.box = VM_BOX
  config.vm.define VM_NAME
  config.vm.hostname = VM_NAME
  config.disksize.size = DISK_SIZE
  #
  # Network and port configuration
  #
  # Set ports as needed
  #config.vm.network :forwarded_port, guest: 8080, host: 8080

  # Private network
  # Configure host-only adapter in Host Network manager, VirtualBox before
  # You can specify an IP or remove it and let DCHP handle it
  config.vm.network "private_network", ip: PRIVATE_NET_IP

  # Bridged network
  # You can specify an IP or let DHCP handle it
  #config.vm.network "public_network"

  # Share a folder between host and VM.
  # Can also be done later throught the GUI
  #config.vm.synced_folder "C:/projects"

  #
  # VIRTUALBOX CONFIGURATION
  #
  # For more options: https://www.virtualbox.org/manual/ch08.html#vboxmanage-cmd-overview
  config.vm.provider "virtualbox" do |vb|
    vb.name = VM_NAME
    vb.cpus = CPU_COUNT
    vb.memory = RAM_MB
    vb.check_guest_additions = true
    vb.customize ["modifyvm", :id, "--vram", "128"]
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    vb.customize [ "modifyvm", :id, "--graphicscontroller", "vmsvga" ]
    vb.customize [ "modifyvm", :id, "--vrde", "off" ]
  end

  #
  # COMMAND LINE INSTRUCTIONS
  #
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    sudo apt-get update
    sudo apt-get upgrade -y
    sudo apt-get install -y vim git curl tree python3-venv python3-pip build-essential
    pip3 install virtualenv

    # install docker
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    sudo usermod -aG docker $USER
    # install docker-compose
    sudo curl -L "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    
  
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
    bash ~/miniconda.sh -b -p $HOME/.conda
    export PATH="$HOME/.conda/bin:$PATH"
    conda init
    rm $HOME/miniconda.sh


    # install java/maven
    #sudo apt-get install -y openjdk-11-jdk                 # sudo apt-get install default-jdk
    #sudo snap install intellij-idea-community --classic		# sudo snap install --classic eclipse 
    #sudo apt-get install -y maven git
    
    # install pycharm
    #sudo snap install pycharm-community --classic
  
    # install Vscode
    #sudo snap install code --classic
  
    # install ubuntu gui
    sudo apt-get install -y ubuntu-desktop
    echo ""
    echo "*************************"
    echo "* Please reboot your VM *"
    echo "*************************"
    echo ""
  SHELL
  config.vm.provision :shell, :inline => "sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/America/Montreal /etc/localtime", run: "always"
end